{"ast":null,"code":"var _jsxFileName = \"/Users/choijinseo/Desktop/recoilcounter/src/App.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React from 'react';\nimport './App.css';\nimport { RecoilRoot, atom, useRecoilState } from 'recoil';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst countState = atom({\n  key: 'countState',\n  default: 0\n});\nconst fontSizeState = atom({\n  key: 'FontSizeState',\n  default: 10\n});\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(RecoilRoot, {\n    children: [/*#__PURE__*/_jsxDEV(Counter, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FontButton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\n\nfunction Counter() {\n  _s();\n\n  const [count, setCount] = useRecoilState(countState);\n\n  const addCount = () => {\n    setCount(count + 1);\n  };\n\n  const subCount = () => {\n    setCount(count - 1);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addCount,\n      children: \"up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: subCount,\n      children: \"sub\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: count\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Counter, \"s5ZWZpqDv/REIa2/wRUthtmgFy4=\", false, function () {\n  return [useRecoilState];\n});\n\n_c2 = Counter;\n\nfunction FontButton() {\n  _s2();\n\n  const [fontSize, setFontSize] = useRecoilState(fontSizeState);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setFontSize(size => size + 1),\n      style: {\n        fontSize\n      },\n      children: \"Click to Large\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setFontSize(size => size - 1),\n      style: {\n        fontSize\n      },\n      children: \"Click to Small\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(FontButton, \"4yG6foWsrkjFr+geERHy+ecTlBI=\", false, function () {\n  return [useRecoilState];\n});\n\n_c3 = FontButton;\nexport default App;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"Counter\");\n$RefreshReg$(_c3, \"FontButton\");","map":{"version":3,"names":["React","RecoilRoot","atom","useRecoilState","countState","key","default","fontSizeState","App","Counter","count","setCount","addCount","subCount","FontButton","fontSize","setFontSize","size"],"sources":["/Users/choijinseo/Desktop/recoilcounter/src/App.js"],"sourcesContent":["import React from 'react';\nimport './App.css';\nimport {RecoilRoot, atom, useRecoilState} from 'recoil';\n\nconst countState = atom({\n  key : 'countState',\n  default: 0,\n})\nconst fontSizeState = atom({\n  key: 'FontSizeState',\n  default: 10,\n})\n\nfunction App() {\n  return (\n    <RecoilRoot>\n      <Counter></Counter>\n      <FontButton></FontButton>\n    </RecoilRoot>\n  );\n}\n\nfunction Counter() {\n  const [count, setCount] = useRecoilState(countState);\n\n  const addCount = () => {\n    setCount(count + 1);\n  }\n  const subCount=()=> {\n    setCount(count - 1);\n  }\n  return(\n    <div>\n      <button onClick={addCount}>up</button>\n      <button onClick={subCount}>sub</button>\n      <p>{count}</p>\n    </div>\n  );\n}\nfunction FontButton() {\n  const [fontSize, setFontSize] = useRecoilState(fontSizeState);\n  return(\n    <div>\n      <button onClick={()=> setFontSize((size)=> size + 1)} style={{fontSize}}>\n        Click to Large\n      </button>\n      <button onClick={()=> setFontSize((size)=> size - 1)} style={{fontSize}}>\n        Click to Small\n      </button>\n    </div>\n  )\n}\n\nexport default App;\n"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,SAAQC,UAAR,EAAoBC,IAApB,EAA0BC,cAA1B,QAA+C,QAA/C;;AAEA,MAAMC,UAAU,GAAGF,IAAI,CAAC;EACtBG,GAAG,EAAG,YADgB;EAEtBC,OAAO,EAAE;AAFa,CAAD,CAAvB;AAIA,MAAMC,aAAa,GAAGL,IAAI,CAAC;EACzBG,GAAG,EAAE,eADoB;EAEzBC,OAAO,EAAE;AAFgB,CAAD,CAA1B;;AAKA,SAASE,GAAT,GAAe;EACb,oBACE,QAAC,UAAD;IAAA,wBACE,QAAC,OAAD;MAAA;MAAA;MAAA;IAAA,QADF,eAEE,QAAC,UAAD;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAMD;;KAPQA,G;;AAST,SAASC,OAAT,GAAmB;EAAA;;EACjB,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,cAAc,CAACC,UAAD,CAAxC;;EAEA,MAAMQ,QAAQ,GAAG,MAAM;IACrBD,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;EACD,CAFD;;EAGA,MAAMG,QAAQ,GAAC,MAAK;IAClBF,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;EACD,CAFD;;EAGA,oBACE;IAAA,wBACE;MAAQ,OAAO,EAAEE,QAAjB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAQ,OAAO,EAAEC,QAAjB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF,eAGE;MAAA,UAAIH;IAAJ;MAAA;MAAA;MAAA;IAAA,QAHF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAOD;;GAhBQD,O;UACmBN,c;;;MADnBM,O;;AAiBT,SAASK,UAAT,GAAsB;EAAA;;EACpB,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0Bb,cAAc,CAACI,aAAD,CAA9C;EACA,oBACE;IAAA,wBACE;MAAQ,OAAO,EAAE,MAAKS,WAAW,CAAEC,IAAD,IAASA,IAAI,GAAG,CAAjB,CAAjC;MAAsD,KAAK,EAAE;QAACF;MAAD,CAA7D;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAIE;MAAQ,OAAO,EAAE,MAAKC,WAAW,CAAEC,IAAD,IAASA,IAAI,GAAG,CAAjB,CAAjC;MAAsD,KAAK,EAAE;QAACF;MAAD,CAA7D;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAJF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAUD;;IAZQD,U;UACyBX,c;;;MADzBW,U;AAcT,eAAeN,GAAf"},"metadata":{},"sourceType":"module"}